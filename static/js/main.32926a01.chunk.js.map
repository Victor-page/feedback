{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptionsList/FeedbackOption/FeedbackOption.js","components/FeedbackOptionsList/FeedbackOptionsList.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptionsList/FeedbackOption/FeedbackOption.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOption","onLeaveFeedback","label","className","classes","feedbackOption","onClick","FeedbackOptionsList","options","map","option","Section","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","buttonLabels","Object","keys","isFeedback","target","textContent","previousState","Math","round","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2LAyCeA,EAvCI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,+BACE,6BACE,uCACQ,+BAAOJ,SAGjB,6BACE,0CACW,+BAAOC,SAGpB,6BACE,sCACO,+BAAOC,SAGhB,6BACE,wCACS,+BAAOC,SAGlB,6BACE,mDAEE,qCAAQC,EAAR,gB,gBCZOC,EAXQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,MAApB,OACrB,wBAAQC,UAAWC,IAAQC,eAAgBC,QAASL,EAApD,SACGC,KCWUK,EAba,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASP,EAAZ,EAAYA,gBAAZ,OAC1BO,EAAQC,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,CAEET,gBAAiBA,EACjBC,MAAOQ,GAFFA,OCOIC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,MCGUC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCiE3BC,EA5DH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOtB,EAAP,KAAauB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOrB,EAAP,KAAgBuB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOpB,EAAP,KAAYuB,EAAZ,KAqBMC,EAAqB,kBAAM1B,EAAOC,EAAUC,GAK5CyB,EAAeC,OAAOC,KAAK,CAAE7B,OAAMC,UAASC,QAC5C4B,EAAa9B,GAAQC,GAAWC,EAEtC,OACE,qCACE,cAAC,EAAD,CAASe,MAAM,wBAAf,SACE,cAAC,EAAD,CACEJ,QAASc,EACTrB,gBAhCe,SAAC,GACtB,OADmE,EAA3CyB,OAAUC,aAEhC,IAAK,OACHT,GAAQ,SAACU,GAAD,OAAmBA,EAAgB,KAC3C,MAEF,IAAK,UACHT,GAAW,SAACS,GAAD,OAAmBA,EAAgB,KAC9C,MAEF,IAAK,MACHR,GAAO,SAACQ,GAAD,OAAmBA,EAAgB,WAyB3CH,EACC,cAAC,EAAD,CAASb,MAAM,aAAf,SACE,cAAC,EAAD,CACEjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,IACPtB,mBArBR8B,KAAKC,MAAO,IAAMnC,EAAQ0B,SAyBtB,cAAC,EAAD,UACE,cAAC,EAAD,CAAcN,QAAQ,8BCvDhCgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,eAAiB,0C","file":"static/js/main.32926a01.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul>\r\n    <li>\r\n      <p>\r\n        Good: <span>{good}</span>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        Neutral: <span>{neutral}</span>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        Bad: <span>{bad}</span>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        Total: <span>{total}</span>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        Positive feedback:\r\n        <span> {positivePercentage}%</span>\r\n      </p>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  neutral: PropTypes.number.isRequired,\r\n  good: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport classes from './FeedbackOption.module.css';\r\n\r\nconst FeedbackOption = ({ onLeaveFeedback, label }) => (\r\n  <button className={classes.feedbackOption} onClick={onLeaveFeedback}>\r\n    {label}\r\n  </button>\r\n);\r\n\r\nFeedbackOption.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOption;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport FeedbackOption from './FeedbackOption';\r\n\r\nconst FeedbackOptionsList = ({ options, onLeaveFeedback }) =>\r\n  options.map((option) => (\r\n    <FeedbackOption\r\n      key={option}\r\n      onLeaveFeedback={onLeaveFeedback}\r\n      label={option}\r\n    />\r\n  ));\r\n\r\nFeedbackOptionsList.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default FeedbackOptionsList;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import { useState } from 'react';\r\n\r\nimport Statistics from 'components/Statistics';\r\nimport FeedbackOptionsList from 'components/FeedbackOptionsList';\r\nimport Section from 'components/Section';\r\nimport Notification from 'components/Notification';\r\n\r\nconst App = () => {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const handleFeedback = ({ target: { textContent: buttonLabel } }) => {\r\n    switch (buttonLabel) {\r\n      case 'good':\r\n        setGood((previousState) => previousState + 1);\r\n        break;\r\n\r\n      case 'neutral':\r\n        setNeutral((previousState) => previousState + 1);\r\n        break;\r\n\r\n      case 'bad':\r\n        setBad((previousState) => previousState + 1);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = () => good + neutral + bad;\r\n\r\n  const countPositiveFeedbackPercentage = () =>\r\n    Math.round((100 * good) / countTotalFeedback());\r\n\r\n  const buttonLabels = Object.keys({ good, neutral, bad });\r\n  const isFeedback = good || neutral || bad;\r\n\r\n  return (\r\n    <>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptionsList\r\n          options={buttonLabels}\r\n          onLeaveFeedback={handleFeedback}\r\n        />\r\n      </Section>\r\n\r\n      {isFeedback ? (\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback()}\r\n            positivePercentage={countPositiveFeedbackPercentage()}\r\n          />\r\n        </Section>\r\n      ) : (\r\n        <Section>\r\n          <Notification message=\"There's no feedback\" />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackOption\":\"FeedbackOption_feedbackOption__2eeSG\"};"],"sourceRoot":""}